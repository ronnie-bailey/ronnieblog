{"version":3,"file":"component---src-pages-index-js-22ecfdf57f2144076bf9.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/tagsPanel.js","webpack://gatsby-starter-blog/./src/pages/index.js","webpack://gatsby-starter-blog/./src/templates/post.js"],"sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\n\n// Utilities\nimport kebabCase from \"lodash/kebabCase\"\n\n// MUI components\nimport Box from \"@mui/material/Box\"\nimport Chip from \"@mui/material/Chip\"\nimport Tabs from \"@mui/material/Tabs\"\nimport Typography from \"@mui/material/Typography\"\n\nconst tagsPanel = () => (\n  <StaticQuery\n    query={graphql`\n      {\n        allMdx {\n          group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          \"@media (max-width: 600px)\": {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n          },\n        }}\n      >\n        <Typography\n          variant=\"overline\"\n          sx={{\n            whiteSpace: \"nowrap\",\n            color: \"text.secondary\",\n            textDecoration: \"none\",\n            \"&:hover\": {\n              textDecoration: \"underline\",\n            }\n            // \"@media (max-width: 600px)\": {\n            //   display: \"none\",\n            // }\n          }}\n          component={Link}\n          to=\"/tags\"\n        >\n          Story Topics\n        </Typography>\n        <Tabs\n          value={0}\n          aria-label=\"tags\"\n          variant=\"scrollable\"\n          scrollButtons\n          sx={{\n            width: \"100%\",\n            alignItems: \"center\",\n            \"& .MuiTabs-indicator\": {\n              display: \"none\",\n            },\n            \"& .MuiTabs-flexContainer\": {\n              gap: \".5rem\",\n            },\n          }}\n        >\n          {data.allMdx.group.map(tag => {\n            // tags list sorted by name\n            return (\n              <Chip\n                key={tag.fieldValue}\n                label={tag.fieldValue}\n                component={Link}\n                to={`/tag/${kebabCase(tag.fieldValue)}/`}\n                clickable\n              />\n            )\n          })}\n        </Tabs>\n      </Box>\n    )}\n  ></StaticQuery>\n)\n\nexport default tagsPanel\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\n// local imports\nimport Post from \"../templates/post\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Tags from \"../components/tagsPanel\"\n\n// MUI components\nimport Box from \"@mui/material/Box\"\nimport Container from \"@mui/material/Container\"\nimport Divider from \"@mui/material/Divider\"\nimport Grid from \"@mui/material/Grid\"\nimport Tabs from \"@mui/material/Tabs\"\nimport Tab from \"@mui/material/Tab\"\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Grid\n          container\n          sx={{ gap: \"2rem\", \"@media (max-width: 600px)\": { gap: \"1.5rem\" } }}\n        >\n          {children}\n        </Grid>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  }\n}\n\nconst Index = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMdx.nodes\n\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Portfolio\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/posts\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Portfolio\" />\n      <Container\n        maxWidth=\"string\"\n        disableGutters\n        sx={{\n          maxWidth: \"692px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"2rem\",\n          \"@media (max-width: 600px)\": {\n            gap: \"1.5rem\",\n            px: \"1.5rem\",\n          },\n        }}\n      >\n        {/* category tabs selector */}\n        <Box\n          sx={{\n            width: \"100%\",\n            borderBottom: 1,\n            borderColor: \"divider\",\n          }}\n        >\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"nav tabs example\"\n            sx={{\n              \"& .MuiTabs-flexContainer\": {\n                gap: \"1rem\",\n              },\n              \"& .MuiTabs-indicator\": {\n                backgroundColor: \"text.primary\",\n                height: \"1px\",\n              },\n            }}\n          >\n            <Tab\n              label=\"Blog\"\n              {...a11yProps(0)}\n              sx={{\n                textTransform: \"capitalize\",\n                fontWeight: 400,\n                minWidth: \"60px\",\n                \"&.Mui-selected\": { color: \"text.primary\" },\n              }}\n            />\n            \n            <Tab\n              label=\"Gear List\"\n              component=\"a\"\n              href=\"/gear\"\n              sx={{\n                textTransform: \"capitalize\",\n                fontWeight: 400,\n                minWidth: \"60px\",\n                \"&.Mui-selected\": { color: \"text.primary\" },\n              }}\n            />\n            <Tab\n              label=\"My Links\"\n              component=\"a\"\n              href=\"/links\"\n              sx={{\n                textTransform: \"capitalize\",\n                fontWeight: 400,\n                minWidth: \"60px\",\n                \"&.Mui-selected\": { color: \"text.primary\" },\n              }}\n            />\n          </Tabs>\n        </Box>\n        \n        <Tags />\n        {/* all posts panel  */}\n        <TabPanel value={value} index={0} key={\"all\"}>\n          {posts.map(post => {\n            return (\n              <Grid\n                item\n                xs={12}\n                key={post.id}\n                sx={{\n                  \"&:last-child\": { \"& > hr\": { display: \"none\" } },\n                }}\n              >\n                <Post data={post} />\n                <Divider\n                  sx={{ pt: 4, \"@media (max-width: 600px)\": { pt: \"1.5rem\" } }}\n                />\n              </Grid>\n            )\n          })}\n        </TabPanel>\n\n        {/* categories panels */}\n        {data.allMdx.group.map((category, index) => (\n          <TabPanel value={value} index={index + 1} key={category.fieldValue}>\n            {posts.map(post => {\n              if (post.frontmatter.category === category.fieldValue) {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    key={post.id}\n                    sx={{\n                      \"&:last-child\": { \"& > hr\": { display: \"none\" } },\n                    }}\n                  >\n                    <Post data={post} />\n                  <Divider\n                      sx={{\n                        pt: 4,\n                        \"@media (max-width: 600px)\": { pt: \"1.5rem\" },\n                      }}\n                    />\n                  </Grid>\n                )\n              }\n              return\n            })}\n          </TabPanel>\n        ))}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: 200) {\n      group(field: frontmatter___category) {\n        fieldValue\n      }\n      nodes {\n        id\n        excerpt\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          category\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(aspectRatio: 1)\n            }\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","// export post item given data\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n// Utilities\nimport kebabCase from \"lodash/kebabCase\"\n\n// MUI components\nimport Box from \"@mui/material/Box\"\nimport Chip from \"@mui/material/Chip\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\n\nconst ClampTypography = {\n  overflow: 'hidden',\n  textOverflow: \"ellipsis\",\n  display: \"-webkit-box\",\n  WebkitLineClamp: \"2\",\n  lineClamp: \"2\", \n  WebkitBoxOrient: \"vertical\",\n}\n\nconst PostItem = ({ data }) => {\n  const image = getImage(data.frontmatter.featuredImage)\n\n  return (\n    <article style={{ width: \"100%\" }}>\n      <Grid\n        item\n        xs={12}\n        key={data.frontmatter.slug}\n        itemScope\n        itemType=\"http://schema.org/Article\"\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          gap: \"60px\",\n          \"@media (max-width: 600px)\": {\n            gap: \"1rem\",\n          },\n        }}\n      >\n        <Box sx={{ padding: \"0 !important\" }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 2,\n              \"@media (max-width: 600px)\": { gap: 1.5 },\n            }}\n          >\n            <Typography color=\"text.disabled\" variant=\"body2\">\n              {data.frontmatter.date}\n            </Typography>\n            <Box\n              component={Link}\n              to={data.fields.slug}\n              sx={{\n                textDecoration: \"none\",\n                color: \"unset\",\n                \"& h2:hover\": {\n                  color: \"primary.main\",\n                },\n                \"@media (max-width: 900px)\": {\n                  \"& h2:hover\": {\n                    color: \"unset\",\n                  },\n                }\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                gutterBottom\n                style={ClampTypography}\n                sx={{\n                  fontWeight: \"700\",\n                  lineHeight: \"28px\",\n                  fontSize: \"22px !important\",\n                  letterSpacing: \"0\",\n                  color: \"text.primary\",\n                  transition: \"color 0.2s ease-in-out\",\n                  \"@media (max-width: 600px)\": {\n                    marginBottom: \"0\",\n                    lineHeight: \"20px\",\n                    fontSize: \"16px !important\",\n                  },\n                }}\n              >\n                {data.frontmatter.title || data.fields.slug}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                gutterBottom\n                style={ClampTypography}\n                sx={{\n                  display: \"initial\",\n                  fontFamily: 'Charter',\n                  marginBottom: \"1rem\",\n                  color: \"text.postBody\",\n                  \"@media (max-width: 600px)\": {\n                    display: \"none !important\",\n                  },\n                }}\n              >\n                {`${data.frontmatter.description} —${data.excerpt}`}\n              </Typography>\n            </Box>\n            <Box sx={{ display: \"flex\", gap: 2, alignItems: \"center\" }}>\n              {data.frontmatter.category && (\n                <Chip\n                  label={data.frontmatter.category}\n                  size=\"small\"\n                  disabled\n                />\n              )}\n              <Typography sx={{ color: \"text.secondary\" }} variant=\"body2\">\n                {`${data.timeToRead} min read`}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n        <Link to={data.fields.slug}>\n          <Box\n            sx={{\n              width: \"100px\",\n              \"@media (max-width: 600px)\": {\n                width: \"80px\",\n              },\n            }}\n          >\n            <GatsbyImage\n              image={image}\n              alt={data.frontmatter.featuredImage.name}\n              style={{borderRadius: \"4px\"}}\n            />\n          </Box>\n        </Link>\n      </Grid>\n    </article>\n  )\n}\n\nexport default PostItem\n"],"names":["StaticQuery","query","render","data","Box","sx","display","alignItems","flexDirection","Typography","variant","whiteSpace","color","textDecoration","component","Link","to","Tabs","value","scrollButtons","width","gap","allMdx","group","map","tag","Chip","key","fieldValue","label","kebabCase","clickable","TabPanel","props","children","index","other","role","hidden","id","Grid","container","location","siteTitle","site","siteMetadata","title","posts","nodes","React","setValue","length","Container","maxWidth","disableGutters","px","borderBottom","borderColor","onChange","event","newValue","backgroundColor","height","Tab","textTransform","fontWeight","minWidth","href","post","item","xs","Divider","pt","category","frontmatter","ClampTypography","overflow","textOverflow","WebkitLineClamp","lineClamp","WebkitBoxOrient","image","getImage","featuredImage","style","slug","itemScope","itemType","justifyContent","padding","date","fields","gutterBottom","lineHeight","fontSize","letterSpacing","transition","marginBottom","fontFamily","description","excerpt","size","disabled","timeToRead","G","alt","name","borderRadius"],"sourceRoot":""}