{"version":3,"file":"component---src-templates-tags-js-3bf6a95bd31f82d61041.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/templates/post.js","webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["// export post item given data\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n// Utilities\nimport kebabCase from \"lodash/kebabCase\"\n\n// MUI components\nimport Box from \"@mui/material/Box\"\nimport Chip from \"@mui/material/Chip\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\n\nconst ClampTypography = {\n  overflow: 'hidden',\n  textOverflow: \"ellipsis\",\n  display: \"-webkit-box\",\n  WebkitLineClamp: \"2\",\n  lineClamp: \"2\", \n  WebkitBoxOrient: \"vertical\",\n}\n\nconst PostItem = ({ data }) => {\n  const image = getImage(data.frontmatter.featuredImage)\n\n  return (\n    <article style={{ width: \"100%\" }}>\n      <Grid\n        item\n        xs={12}\n        key={data.frontmatter.slug}\n        itemScope\n        itemType=\"http://schema.org/Article\"\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          gap: \"60px\",\n          \"@media (max-width: 600px)\": {\n            gap: \"1rem\",\n          },\n        }}\n      >\n        <Box sx={{ padding: \"0 !important\" }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 2,\n              \"@media (max-width: 600px)\": { gap: 1.5 },\n            }}\n          >\n            <Typography color=\"text.disabled\" variant=\"body2\">\n              {data.frontmatter.date}\n            </Typography>\n            <Box\n              component={Link}\n              to={data.fields.slug}\n              sx={{\n                textDecoration: \"none\",\n                color: \"unset\",\n                \"& h2:hover\": {\n                  color: \"primary.main\",\n                },\n                \"@media (max-width: 900px)\": {\n                  \"& h2:hover\": {\n                    color: \"unset\",\n                  },\n                }\n              }}\n            >\n              <Typography\n                variant=\"h2\"\n                gutterBottom\n                style={ClampTypography}\n                sx={{\n                  fontWeight: \"700\",\n                  lineHeight: \"28px\",\n                  fontSize: \"22px !important\",\n                  letterSpacing: \"0\",\n                  color: \"text.primary\",\n                  transition: \"color 0.2s ease-in-out\",\n                  \"@media (max-width: 600px)\": {\n                    marginBottom: \"0\",\n                    lineHeight: \"20px\",\n                    fontSize: \"16px !important\",\n                  },\n                }}\n              >\n                {data.frontmatter.title || data.fields.slug}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                gutterBottom\n                style={ClampTypography}\n                sx={{\n                  display: \"initial\",\n                  fontFamily: 'Charter',\n                  marginBottom: \"1rem\",\n                  color: \"text.postBody\",\n                  \"@media (max-width: 600px)\": {\n                    display: \"none !important\",\n                  },\n                }}\n              >\n                {`${data.frontmatter.description} â€”${data.excerpt}`}\n              </Typography>\n            </Box>\n            <Box sx={{ display: \"flex\", gap: 2, alignItems: \"center\" }}>\n              {data.frontmatter.category && (\n                <Chip\n                  label={data.frontmatter.category}\n                  size=\"small\"\n                  disabled\n                />\n              )}\n              <Typography sx={{ color: \"text.secondary\" }} variant=\"body2\">\n                {`${data.timeToRead} min read`}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n        <Link to={data.fields.slug}>\n          <Box\n            sx={{\n              width: \"100px\",\n              \"@media (max-width: 600px)\": {\n                width: \"80px\",\n              },\n            }}\n          >\n            <GatsbyImage\n              image={image}\n              alt={data.frontmatter.featuredImage.name}\n              style={{borderRadius: \"4px\"}}\n            />\n          </Box>\n        </Link>\n      </Grid>\n    </article>\n  )\n}\n\nexport default PostItem\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Post from \"../templates/post\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n// Components\nimport Box from \"@mui/material/Box\"\nimport Container from \"@mui/material/Container\"\nimport Divider from \"@mui/material/Divider\"\nimport Grid from \"@mui/material/Grid\"\nimport IconButton from \"@mui/material/IconButton\"\nimport LocalOfferIcon from \"@mui/icons-material/LocalOffer\"\nimport MuiLink from \"@mui/material/Link\"\nimport Typography from \"@mui/material/Typography\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMdx\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout\n      location={tag}\n      title={\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <IconButton\n            size=\"small\"\n            sx={{\n              mr: 1,\n              backgroundColor: \"action.selected\",\n              color: \"text.primary\",\n            }}\n          >\n            <LocalOfferIcon fontSize=\"small\" />\n          </IconButton>\n          {tag}\n        </Box>\n      }\n    >\n      <Seo title={`${tag} (${totalCount})`} />\n      <Container\n        maxWidth=\"string\"\n        disableGutters\n        sx={{\n          maxWidth: \"692px\",\n          \"@media (max-width: 600px)\": {\n            px: \"1.5rem\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"2rem\",\n            \"@media (max-width: 600px)\": { gap: \"1.5rem\" },\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              borderBottom: 1,\n              borderColor: \"divider\",\n              py: \"12px\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              gap: 2,\n            }}\n          >\n            <Typography variant=\"body1\">{tagHeader}</Typography>\n            <MuiLink href=\"/\" color=\"inherit\" component={Link} to=\"/tags\">\n              Story Topics\n            </MuiLink>\n          </Box>\n\n          <Grid\n            container\n            sx={{ gap: \"2rem\", \"@media (max-width: 600px)\": { gap: \"1.5rem\" } }}\n          >\n            {edges.map(({ node }) => {\n              // posts list by tag\n              return (\n                <Box\n                  key={node.id}\n                  sx={{\n                    width: \"100%\",\n                    \"&:last-child\": { \"& > hr\": { display: \"none\" } },\n                  }}\n                >\n                  <Post data={node} />\n                  <Divider\n                    sx={{\n                      width: \"100%\",\n                      pt: 4,\n                      \"@media (max-width: 600px)\": { pt: \"1.5rem\" },\n                    }}\n                  />\n                </Box>\n              )\n            })}\n          </Grid>\n        </Box>\n      </Container>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 200\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(aspectRatio: 1.5)\n              }\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ClampTypography","overflow","textOverflow","display","WebkitLineClamp","lineClamp","WebkitBoxOrient","data","image","getImage","frontmatter","featuredImage","style","width","item","xs","key","slug","itemScope","itemType","sx","flexDirection","justifyContent","alignItems","gap","padding","color","variant","date","component","Link","to","fields","textDecoration","gutterBottom","fontWeight","lineHeight","fontSize","letterSpacing","transition","marginBottom","title","fontFamily","description","excerpt","category","label","size","disabled","timeToRead","G","alt","name","borderRadius","pageContext","tag","allMdx","edges","totalCount","tagHeader","location","mr","backgroundColor","maxWidth","disableGutters","px","borderBottom","borderColor","py","href","container","map","node","id","pt"],"sourceRoot":""}